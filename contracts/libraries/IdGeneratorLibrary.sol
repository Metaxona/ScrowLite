// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

/**
@title Metaxona Escrow Id Generator Library
@custom:library-name IdGenerator
@author Metaxona
@custom:author-url https://metaxona.com
@custom:github https://github.com/metaxona
@notice This Library Generates A Unique ID By Combining Select Values And Hashing Them Using Keccak256
Resulting In A bytes32 Id
*/
library IdGenerator {
	/**
	@dev This function is used to get the bytes32 Id which is the keccak256 of all selected parameters
	to ensure that the Id generated by will always be unique and avoid collision
	*/
	function hashMe(string memory _data) private pure returns (bytes32){
		return keccak256(bytes(_data));
	}

	/**
	@dev This function takes the parameters that would be combined to a sting and generate a unique ID for each escrow trade
	`_sender` - The address of the creator of the Escrow Instance
	`_partyB` - The target's address
	`blockNumber` - The latest block number on the chain during the creation of the Instance
	`timestamp` - The block Timestamp during the creation of the Instance
	*/
	function generateId(address _sender, address _partyB, uint256 blockNumber, uint256 timestamp) public pure returns (bytes32){
		return hashMe(
			string(abi.encodePacked(_sender, _partyB, blockNumber, timestamp)) 
		);
	}
}